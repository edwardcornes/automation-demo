///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$ ###0.00;-$ ###0.00';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:Î¼;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';



// --------------------------------------------------------------------------------------------------------------------------------- //
// -- INSTRUCTIONS : CHANGE ALL VARIABLES, CREATE 1  vConnectionLib FOR EACH AUTOMATION OWNER YOU WANT TO LIST (WITH API KEY)
// --------------------------------------------------------------------------------------------------------------------------------- //

LET vConnectionLib  = 'REST_Automation_Edward_Cornes';
LET vConnectionLib2 = 'REST_Automation_Edward_Cornes';
LET vTenantURL 	    = 'https://qmw918a7fmib88n.eu.qlikcloud.com/';


// --------------------------------------------------------------------------------------------------------------------------------- //
///$tab List all Automations
LIB CONNECT TO $(vConnectionLib);

RestConnectorMasterTable:
SQL SELECT 
	"__KEY_root",
	(SELECT 
		"id",
		"ownerId",
		"name",
		"state",
		"description",
		"lastRunStatus",
		"runMode",
		"createdAt",
		"updatedAt",
		"lastRunAt",
		"__FK_data"
	FROM "data" FK "__FK_data")
FROM JSON (wrap on) "root" PK "__KEY_root";


// Use only for loop

[List_All_Automation_TMP]:
LOAD
	distinct [id]
    
RESIDENT RestConnectorMasterTable
where ownerId = '63401120124d1d36b668f410';

DROP TABLE RestConnectorMasterTable;

///$tab Automations Details (blocks)
//LIB CONNECT TO 'REST_Automation_Details';

set ErrorMode=0;

FOR i = 0 to NoOfRows('List_All_Automation_TMP') - 1

	Let vAutomationID = Peek('id', $(i), 'List_All_Automation_TMP');


RestConnectorMasterTable:
LOAD *,$(i) AS internal_key;
SQL SELECT 
	"id" AS "id_u4",
	"ownerId",
	"name" AS "name_u1",
	"state",
	"description",
	"lastRunStatus",
	"executionToken",
	"runMode",
	"createdAt" AS "createdAt_u0",
	"updatedAt" AS "updatedAt_u0",
	"lastRunAt",
	"__KEY_root",
	(SELECT 
		"id",
		"startAt",
		"stopAt",
		"lastStartAt",
		"interval",
		"timezone",
		"__FK_schedules"
	FROM "schedules" FK "__FK_schedules"),
	(SELECT 
		"__KEY_workspace",
		"__FK_workspace",
		(SELECT 
			"x",
			"y",
			"id" AS "id_u2",
			"name" AS "name_u0",
			"type" AS "type_u1",
			"childId",
			"comment",
			"disabled",
			"displayName",
			"endpoint_guid",
			"endpoint_role",
			"datasourcetype_guid",
			"__KEY_blocks",
			"__FK_blocks"
		FROM "blocks" PK "__KEY_blocks" FK "__FK_blocks"),
		(SELECT 
			"@Value" AS "@Value_u4",
			"__FK_variables"
		FROM "variables" FK "__FK_variables" ArrayValueAlias "@Value_u4")
	FROM "workspace" PK "__KEY_workspace" FK "__FK_workspace"),
	(SELECT 
		"id" AS "id_u3",
		"context",
		"status",
		"title",
		"isTestRun",
		"isArchived",
		"error",
		"startTime",
		"stopTime",
		"scheduledStartTime",
		"createdAt",
		"updatedAt",
		"__FK_lastRun"
	FROM "lastRun" FK "__FK_lastRun")
FROM JSON (wrap on) "root" PK "__KEY_root"
WITH CONNECTION(Url "$(vTenantURL)/api/v1/automations/$(vAutomationID)");

next i;

// **************************************************************************************
// SECOND TIME WITH NEW API

LIB CONNECT TO $(vConnectionLib2);

// FOR i = 0 to NoOfRows('List_All_Automation_TMP') - 1

// 	Let vAutomationID = Peek('id', $(i), 'List_All_Automation_TMP');


// RestConnectorMasterTable:
// LOAD *,$(i)+1000 AS internal_key;
// SQL SELECT 
// 	"id" AS "id_u4",
// 	"ownerId",
// 	"name" AS "name_u1",
// 	"state",
// 	"description",
// 	"lastRunStatus",
// 	"executionToken",
// 	"runMode",
// 	"createdAt" AS "createdAt_u0",
// 	"updatedAt" AS "updatedAt_u0",
// 	"lastRunAt",
// 	"__KEY_root",
// 	(SELECT 
// 		"id",
// 		"startAt",
// 		"stopAt",
// 		"lastStartAt",
// 		"interval",
// 		"timezone",
// 		"__FK_schedules"
// 	FROM "schedules" FK "__FK_schedules"),
// 	(SELECT 
// 		"__KEY_workspace",
// 		"__FK_workspace",
// 		(SELECT 
// 			"x",
// 			"y",
// 			"id" AS "id_u2",
// 			"name" AS "name_u0",
// 			"type" AS "type_u1",
// 			"childId",
// 			"comment",
// 			"disabled",
// 			"displayName",
// 			"endpoint_guid",
// 			"endpoint_role",
// 			"datasourcetype_guid",
// 			"__KEY_blocks",
// 			"__FK_blocks"
// 		FROM "blocks" PK "__KEY_blocks" FK "__FK_blocks"),
// 		(SELECT 
// 			"@Value" AS "@Value_u4",
// 			"__FK_variables"
// 		FROM "variables" FK "__FK_variables" ArrayValueAlias "@Value_u4")
// 	FROM "workspace" PK "__KEY_workspace" FK "__FK_workspace"),
// 	(SELECT 
// 		"id" AS "id_u3",
// 		"context",
// 		"status",
// 		"title",
// 		"isTestRun",
// 		"isArchived",
// 		"error",
// 		"startTime",
// 		"stopTime",
// 		"scheduledStartTime",
// 		"createdAt",
// 		"updatedAt",
// 		"__FK_lastRun"
// 	FROM "lastRun" FK "__FK_lastRun")
// FROM JSON (wrap on) "root" PK "__KEY_root"
// WITH CONNECTION(Url "$(vTenantURL)/api/v1/automations/$(vAutomationID)");

// next i;

set ErrorMode=1;

[schedules]:
LOAD	[id] as [id_schedule],
	[startAt],
	[stopAt],
	[lastStartAt],
	[interval],
	[timezone],
	//[__FK_schedules] AS [__KEY_root],
    internal_key
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_schedules]);


[blocks]:
LOAD	
	[x] as block_x,
	[y] as block_y,
	[id_u2]   AS [id_block],
	[name_u0] AS [block_name],
	[type_u1] AS [block_type],
	//[childId],
	[comment]		AS [block_commnet],
	[displayName]	AS [block_displayName],
    IF(WildMatch([name_u0],'callAutomation*'),Trim(SubField([displayName],'-',2)),Null()) AS [id_container_task_child],
	//[endpoint_guid],
	//[endpoint_role],
	//[datasourcetype_guid],
	//[__KEY_blocks],
	//[__FK_blocks] AS [__KEY_workspace]
    internal_key
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_blocks])
AND MixMatch([disabled],'false');  //--> REMOVE DISABLED BLOCKS


[variables]:
LOAD	[@Value_u4] AS [@Value_u4],
	//[__FK_variables] AS [__KEY_workspace]
    internal_key
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_variables]);


// [workspace]:
// LOAD	[__KEY_workspace],
// 	//[__FK_workspace] AS [__KEY_root],
//     internal_key
// RESIDENT RestConnectorMasterTable
// WHERE NOT IsNull([__FK_workspace]);


[lastRun]:
LOAD	
	[id_u3] AS [id_lastrun],
	[context],
	[status],
	[title],
	[isTestRun],
	[isArchived],
	[error],
	[startTime],
	[stopTime],
	[scheduledStartTime],
	[createdAt],
	[updatedAt],
	//[__FK_lastRun] AS [__KEY_root],
    internal_key
RESIDENT RestConnectorMasterTable
WHERE NOT IsNull([__FK_lastRun]);


[Automation]:
LOAD distinct 
	[id_u4] AS id_automation,
    IF(WildMatch([name_u1],'Task*'),Trim(SubField([name_u1],'-',2)),Null())	AS [id_container_task],
	[ownerId],
	[name_u1] AS [automation_name],
	[state],
	[description],
	[lastRunStatus],
	[executionToken],
	[runMode],
	[createdAt_u0] AS [createdAt_u0],
	[updatedAt_u0] AS [updatedAt_u0],
    [lastRunAt],
	Date(Floor(lastRunAt),'DD/MM/YY') as [lastRunAt_Date],
	//[__KEY_root],
    internal_key
RESIDENT RestConnectorMasterTable
 WHERE NOT IsNull([__KEY_root])
//  AND WildMatch([name_u1],'Task*') // ONLY TASKS
 AND NOT WildMatch(UPPER([name_u1]),'*TEST*')
;

// Hierachy level using blocks rules with : CALL AUTOMATION block type

Left Join (Automation)

LOAD
	[id_container_task_child] 	as [id_container_task],
	internal_key 				as internal_key_parentid    
RESIDENT blocks;



DROP TABLE RestConnectorMasterTable;


Drop table List_All_Automation_TMP;


